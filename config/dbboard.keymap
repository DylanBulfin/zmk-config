/* Include all behavior includes needed */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYER_Base 0

&sk { quick-release; };

/ {
    macros {
        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &out OUT_BLE>;
            label = "BT1";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &out OUT_BLE>;
            label = "BT1";
        };

        bt2: bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &out OUT_BLE>;
            label = "BT2";
        };
    };

    behaviors {
        clt: clt {
            compatible = "zmk,behavior-hold-tap";
            label = "CLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        st_ht: st_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "ST_HT";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            retro-tap;
        };

        lh_hrm: lh_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LH_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <42 30 6 18 19 31 43 44 32 20 8 7 45 46 34 33 21 9 22 10 11 23 47 35 57 58>;
        };

        rh_hrm: rh_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RH_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <36 24 12 0 1 25 37 13 26 38 27 39 15 27 3 2 14 40 28 16 4 5 29 41 17 50 49>;
        };
    };

    combos {
        compatible = "zmk,combos";

        db_sh_cw {
            bindings = <&kp CAPSLOCK>;
            key-positions = <48 59>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC    &kp N1              &kp N2            &kp N3           &kp N4         &kp N5                      &kp N6      &kp N7         &kp N8           &kp N9          &kp N0              &kp DOT
&kp TAB    &kp Q               &kp W             &kp F            &kp P          &kp B                       &kp J       &kp L          &kp U            &kp Y           &kp SEMI            &kp BSLH
&kp LCTRL  &lh_hrm LALT A      &lh_hrm LGUI R    &lh_hrm LCTRL S  &kp T          &kp G                       &kp M       &kp N          &rh_hrm LCTRL E  &rh_hrm LGUI I  &rh_hrm LALT O      &kp SQT
&kp LSHFT  &kp Z               &kp X             &kp C            &kp D          &kp V                       &kp K       &kp H          &kp COMMA        &kp DOT         &kp FSLH            &kp BSLH
           &st_ht LSHFT LSHFT  &clt 2 BACKSPACE  &clt 3 ENTER     &clt 6 ESCAPE  &caps_word  &sl 5    &sl 5  &caps_word  &clt 7 ESCAPE  &clt 4 TAB       &clt 1 SPACE    &st_ht LSHFT LSHFT
            >;
        };

        nav {
            bindings = <
&kp ESC    &kp N1                &kp N2    &kp N3     &kp N4      &kp N5                  &kp N6    &kp N7         &kp N8     &kp N9     &kp N0              &none
&kp TAB    &none                 &none     &none      &none       &none                   &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &none               &none
&kp LCTRL  &kp LALT              &kp LGUI  &kp LCTRL  &kp LSHIFT  &none                   &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &none               &none
&kp LSHFT  &none                 &none     &none      &none       &none                   &none     &none          &none      &none      &none               &none
           &st_ht LSHIFT LSHIFT  &kp BSPC  &kp RET    &none       &none   &none    &none  &none     &none          &none      &none      &st_ht LSHFT LSHFT
            >;
        };

        num {
            bindings = <
&kp ESC    &kp N1                   &kp N2    &kp N3     &kp N4     &kp N5                  &kp N6     &kp N7  &kp N8     &kp N9  &kp N0     &none
&kp TAB    &none                    &none     &none      &none      &none                   &kp LBKT   &kp N7  &kp N8     &kp N9  &kp RBKT   &none
&kp LCTRL  &kp LALT                 &kp LGUI  &kp LCTRL  &kp LSHFT  &none                   &kp DOT    &kp N4  &kp N5     &kp N6  &kp EQUAL  &kp SQT
&kp LSHFT  &none                    &none     &none      &none      &none                   &kp GRAVE  &kp N1  &kp N2     &kp N3  &kp BSLH   &none
           &st_ht LSHFT LEFT_SHIFT  &none     &none      &none      &none   &none    &none  &none      &none   &kp MINUS  &kp N0  &kp SPACE
            >;
        };

        sym {
            bindings = <
&kp ESC    &kp LS(EXCL)             &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)        &kp LS(LPAR)               &kp LS(RPAR)  &none
&kp TAB    &none                    &none       &none          &none         &none                          &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)        &kp LS(LPAR)               &kp LS(RBRC)  &kp DOWN
&kp LCTRL  &kp LALT                 &kp LGUI    &kp LCTRL      &kp LSHFT     &none                          &kp LS(GT)     &kp LS(DLLR)  &kp LS(PRCNT)       &kp LS(CARET)              &kp LS(PLUS)  &kp LS(DQT)
&kp LSHFT  &none                    &none       &none          &none         &none                          &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)          &kp LS(POUND)              &kp LS(PIPE)  &none
           &st_ht LSHFT LEFT_SHIFT  &none       &none          &none         &none          &none    &none  &none          &none         &kp LS(UNDERSCORE)  &kp LS(RIGHT_PARENTHESIS)  &kp SPACE
            >;
        };

        func {
            bindings = <
&kp ESC     &kp N1                    &kp N2    &kp N3   &kp N4  &kp N5                        &kp N6  &kp N7     &kp N8     &kp N9    &kp N0                &none
&kp TAB     &kp F12                   &kp F7    &kp F8   &kp F9  &kp DEL                       &none   &none      &none      &none     &none                 &none
&kp LCTRL   &kp F11                   &kp F4    &kp F5   &kp F6  &kp CAPSLOCK                  &none   &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT              &none
&kp LSHIFT  &kp F10                   &kp F1    &kp F2   &kp F3  &none                         &none   &none      &none      &none     &none                 &none
            &st_ht LSHIFT LEFT_SHIFT  &kp BSPC  &kp RET  &none   &none         &none    &none  &none   &none      &none      &none     &st_ht LSHIFT LSHIFT
            >;
        };

        meta {
            bindings = <
&none        &none       &none  &none  &none         &none                  &none  &none         &none  &none  &none       &none
&none        &none       &none  &none  &out OUT_USB  &bt0                   &bt0   &out OUT_USB  &none  &none  &none       &none
&none        &none       &none  &none  &out OUT_BLE  &bt1                   &bt1   &out OUT_USB  &none  &none  &none       &none
&bootloader  &sys_reset  &none  &none  &none         &bt2                   &bt2   &none         &none  &none  &sys_reset  &bootloader
             &none       &none  &none  &none         &none  &none    &none  &none  &none         &none  &none  &none
            >;
        };

        ohr {
            bindings = <
&kp ESCAPE  &kp N0    &kp N9   &kp N8     &kp N7  &kp N6                  &none  &none      &none      &none     &none     &none
&kp TAB     &kp SEMI  &kp Y    &kp U      &kp L   &kp J                   &none  &none      &none      &none     &none     &none
&kp LCTRL   &kp O     &kp I    &kp E      &kp N   &kp M                   &none  &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT  &none
&kp LSHFT   &kp FSLH  &kp DOT  &kp COMMA  &kp H   &kp K                   &none  &none      &none      &none     &none     &none
            &none     &none    &none      &none   &none   &none    &none  &none  &none      &none      &none     &none
            >;
        };

        ohl {
            bindings = <
&none  &none     &none     &none      &none      &none                  &kp N5  &kp N4  &kp N3  &kp N2  &kp N1  &kp ESC
&none  &none     &none     &none      &none      &none                  &kp B   &kp P   &kp F   &kp W   &kp Q   &kp TAB
&none  &kp LALT  &kp LGUI  &kp LCTRL  &kp LSHFT  &none                  &kp G   &kp T   &kp S   &kp R   &kp A   &kp LCTRL
&none  &none     &none     &none      &none      &none                  &kp V   &kp D   &kp C   &kp X   &kp Z   &kp LSHFT
       &none     &none     &none      &none      &none  &none    &none  &none   &none   &none   &none   &none
            >;
        };
    };
};
